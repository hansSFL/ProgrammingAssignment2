## Cache inverse of matrix 

## This function creates a matrix object that can cache its inverse.
makeCacheMatrix <- function(x = matrix()) {
    m<-NULL
    setmatrix <- function(y){
    x<<-y
    m<<-NULL
    }
    getmatrix<-function() x
    setmatrixinv<-function(solve) m<<- solve
    getmatrixinv<-function() m
    list(setmatrix=setmatrix, getmatrix=getmatrix,
    setmatrixinv=setmatrixinv,
    getmatrixinv=getmatrixinv)
}

## This function computes the inverse of a matrix
cacheSolve <- function(x=matrix(), ...) {
    m<-x$getmatrixinv()
    if(!is.null(m)){
      message("retrieve cached data")
      return(m)
    }
    matrix<-x$getmatrix()
    m<-solve(matrix, ...)
    x$setmatrixinv(m)
    m
}
